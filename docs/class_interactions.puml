@startuml class_interactions

participant "Receiver" as Receiver
participant "IMU" as IMU
participant "Actuator" as Actuator
participant "LED" as LED
participant "RGB_LED" as RGB_LED
participant "Aircraft" as Aircraft
participant "PIDController" as PIDController
participant "FlightController" as FlightController
participant "SystemController" as SystemController
participant "WiFiManager" as WiFiManager
participant "Logger" as Logger

== Lettura sensori ==
Receiver -> Aircraft : read(ReceiverData &data)
IMU -> Aircraft : read(ImuData &data)

== Comunicazione da Aircraft ==
Aircraft -> Actuator : write(value)
Aircraft -> LED : update()
Aircraft -> RGB_LED : update()
Aircraft --> SystemController : pass ReceiverData
Aircraft --> FlightController : pass ImuData

== Controllo globale ==
SystemController -> Aircraft : update_state(CONTROLLER_STATE newState)
SystemController -> Aircraft : check_errors()
SystemController -> FlightController : update_modes(ReceiverData)

== Calcoli e controllo PID ==
FlightController -> PIDController : compute(error, dt, kp_offset, ki_offset, kd_offset)
FlightController --> Aircraft : access imu_data, receiver_data
Aircraft --> Actuator : pass control values

== Logging e connessioni ==
Logger -> all : log(String message)
Logger -> SystemController : logData(ImuData, ReceiverData, PID, Output)
WiFiManager -> Logger : provide connection and server health
Logger -> WiFiManager : sendLogToServer(log)

@enduml
