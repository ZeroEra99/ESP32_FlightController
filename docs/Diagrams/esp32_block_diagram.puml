@startuml esp32_block_diagram

title Architettura a Blocchi - Software ESP32

package "Input" {
    rectangle "IMU" as imu
    note right of imu
        Raccolta dei dati inerziali (velocita' 
        angolare, accelerazioni e orientamento)
    end note

    rectangle "Ricevitore" as receiver
    note right of receiver
        Acquisizione dei comandi inviati dal pilota 
        tramite stick, switch e potenziometri
    end note
}

package "Elaborazione" {
    rectangle "Gestione Stato e Modalita'" as state_mode
    note right of state_mode
        Gestione degli stati operativi (ARMATO/DISARMATO) e delle
        modalita' di assistenza (manuale, stabilizzazione, attitudine)
    end note

    rectangle "Controllo PID" as pid_control
    note right of pid_control
        Calcolo degli output per il controllo degli attuatori
    end note
}

package "Output" {
    rectangle "Attuatori" as actuators
    note right of actuators
        Applicazione dei comandi ai servomotori e
        agli ESC per il controllo dei movimenti
    end note

    rectangle "LED/RGB" as leds
    note right of leds
        Fornitura di feedback visivo sugli stati operativi
    end note
}

package "Logging" {
    rectangle "Logger" as logger
    note right of logger
        Raccolta e formattazione dei dati diagnostici
        e operativi per il monitoraggio remoto
    end note
}

package "Comunicazione" {
    rectangle "WiFiManager" as wifi
    note right of wifi
        Configurazione e gestione della connessione WiFi
    end note

    rectangle "mDNS" as mdns
    note right of mdns
        Scoperta del server sulla rete locale
    end note

    rectangle "HTTP Client" as http_client
    note right of http_client
        Trasmissione dei dati e log al server tramite richieste HTTP
    end note
}

imu --> state_mode : Dati inerziali
receiver --> state_mode : Comandi pilota
state_mode --> pid_control : Stato operativo e setpoint
pid_control --> actuators : Comandi per attuatori
state_mode --> leds : ModalitÃ  operativa
pid_control --> logger : Dati diagnostici
logger --> wifi : Trasmissione log
wifi --> mdns : Annuncio del server
wifi --> http_client : Trasmissione dati al server

@enduml
